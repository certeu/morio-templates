- moriodata:
    info: "Collects access and error log data from the Apache 2.x HTTP Server on Linux systems"
    href: "https://morio.it/hub/modules/linux-apache2"
    vars:
      LOGS_LINUX_APACHE2_ACCESS_LOG_PATHS:
        dflt:
          - /var/log/apache2/*access*.log
        info: A (glob) list of paths from which to collect Apache access logs
      LOGS_LINUX_APACHE2_ERROR_LOG_PATHS:
        dflt:
          - /var/log/apache2/*error*.log
        info: A (glob) list of paths from which to collect Apache error logs
    version: 1

# This collects all Apache error logs
- type: filestream
  id: apache2_error
  paths: {{{ LOGS_LINUX_APACHE2_ERROR_LOGS_PATHS }}}
  processors:
    - if:
        regexp:
          message: '^\[.+\]\s\[.+\]\s\[.*\sAH[0-9]{5}:.*' # default ErrorLogFormat
      then:
        - dissect:
            field: "message"
            tokenizer: "[%{temp_timestamp}] [%{event.module}:%{log.level}] [pid %{process.pid}:tid %{thread.id}] %{error.code}: %{event.message}"
            target_prefix: ''
            ignore_missing: true
            ignore_failure: true
            overwrite_keys: true
        - add_labels:
            labels:
              detected_log_format: "default"

    - timestamp:
        field: temp_timestamp
        layouts:
          - 'Mon Jan 02 15:04:05.999999 2006'
        timezone: Local
    - drop_fields:
        fields: temp_timestamp

# This collects all Apache access logs
- type: filestream
  id: apache2_access
  paths: {{{ LOGS_LINUX_APACHE2_ACCESS_LOGS_PATHS }}}

  processors:
    - if:
        regexp:
          message: '^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3} .+ \d+ \d+$' # LogFormat common
      then:
        - if:
            regexp:
              message: '\sHTTP' # The request section includes the keyword HTTP as expected
          then:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{http.request.method} %{url.full} %{http.version}\" %{http.response.status_code} %{http.response.body.bytes}"
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_labels:
                labels:
                  detected_log_format: "common"
          else:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{url.full}\" %{http.response.status_code} %{http.response.body.bytes}"
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_labels:
                labels:
                  detected_log_format: "common_incomplete"

    - if:
        regexp:
            message: '^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3} .+ \d+ \d+\s' # LogFormat combined
      then:
        - if:
            regexp:
              message: '\sHTTP' # The request section includes the keyword HTTP as expected
          then:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{http.request.method} %{url.full} %{http.version}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_labels:
                labels:
                  detected_log_format: "combined"
          else:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{url.full}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_labels:
                labels:
                  detected_log_format: "combined_incomplete"

    - if:
        regexp:
            message: '^[^:\s]+:\d{1,3}\s\d{1,3}.+ \d+ \d+' # LogFormat vhost_combined
      then:
        - if:
            regexp:
              message: '\sHTTP' # The request section includes the keyword HTTP as expected
          then:
            - dissect:
                field: "message"
                tokenizer: "%{http.server.name}:%{http.server.port} %{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{http.request.method} %{url.full} %{http.version}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_labels:
                labels:
                  detected_log_format: "vhost_combined"
          else:
            - dissect:
                field: "message"
                tokenizer: "%{http.server.name}:%{http.server.port} %{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{url.full}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_labels:
                labels:
                  detected_log_format: "vhost_combined_incomplete"

    - timestamp:
        field: temp_timestamp
        layouts:
          - '02/Jan/2006:15:04:05 -0700'
    - drop_fields:
        fields: temp_timestamp

