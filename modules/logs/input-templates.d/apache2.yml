# This software is provided "as is" and any express or implied warranties, including,
# but not limited to, the implied warranties of merchantability and fitness for a
# particular purpose are disclaimed. In no event shall the authors or copyright holders
# be liable for any claim, damages or other liability, whether in an action of contract,
# tort or otherwise, arising from, out of or in connection with the software or the use
# or other dealings in the software.
#
# The software is provided under the European Union Public Licence (EUPL) version 1.2;
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at:
#
#     https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the specific language governing
# permissions and limitations under the License.

{{#MORIO_DOCS}}
about: |-
  A filebeat module for Linux systems

  This collects access and error log data from the Apache 2.x HTTP Server. It autodetects and supports the following log file formats:
  - access: common
  - access: combined
  - access: vhost_combined
  - error: default (without client IP)

  If the logs are to be sent to a Splunk ecosystem, you can set the MORIO_APACHE_SPLUNK_INDEX_NAME Morio variable to specify the name of the Splunk index to use.
{{/MORIO_DOCS}}

{{^MORIO_DOCS}}

- type: log # This collects all Apache error logs
  id: apache2_error
  paths:
    - /var/log/apache2/*error*.log

  processors:
    - add_fields:
        target: morio
        fields:
          module: {{ MORIO_MODULE_NAME }}

    - add_fields:
        target: host
        fields:
          id: {{ MORIO_CLIENT_UUID }}

    - add_fields:
        target: debug
        fields:
          iteration: "AE-AA"

    - if:
        regexp:
          message: '^\[.+\]\s\[.+\]\s\[.*\sAH[0-9]{5}:.*' # default ErrorLogFormat
      then:
        - dissect:
            field: "message"
            tokenizer: "[%{temp_timestamp}] [%{event.module}:%{log.level}] [pid %{process.pid}:tid %{thread.id}] %{error.code}: %{event.message}"
            target_prefix: ''
            ignore_missing: true
            ignore_failure: true
            overwrite_keys: true
        - add_fields:
            target: log
            fields:
              detected_format: "default"

    - timestamp:
        field: temp_timestamp
        layouts:
          - 'Mon Jan 02 15:04:05.999999 2006'
        timezone: Local
    - drop_fields:
        fields: temp_timestamp

    {{#MORIO_APACHE_SPLUNK_INDEX_NAME }}
    - add_fields:
        target: splunk
        fields:
          index: {{ MORIO_APACHE_SPLUNK_INDEX_NAME }}
    {{/MORIO_APACHE_SPLUNK_INDEX_NAME }}


- type: log # This collects all Apache access logs
  id: apache2_access
  paths:
    - /var/log/apache2/*access*.log

  processors:
    - add_fields:
        target: morio
        fields:
          module: {{ MORIO_MODULE_NAME }}

    - add_fields:
        target: host
        fields:
          id: {{ MORIO_CLIENT_UUID }}

    - add_fields:
        target: debug
        fields:
          iteration: "AL-AU"

    - if:
        regexp:
          message: '^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3} .+ \d+ \d+$' # LogFormat common
      then:
        - if:
            regexp:
              message: '\sHTTP' # The request section includes the keyword HTTP as expected
          then:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{http.request.method} %{url.full} %{http.version}\" %{http.response.status_code} %{http.response.body.bytes}"
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_fields:
                target: log
                fields:
                  detected_format: "common"
          else:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{url.full}\" %{http.response.status_code} %{http.response.body.bytes}"
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_fields:
                target: log
                fields:
                  detected_format: "common_incomplete"

    - if:
        regexp:
            message: '^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3} .+ \d+ \d+\s' # LogFormat combined
      then:
        - if:
            regexp:
              message: '\sHTTP' # The request section includes the keyword HTTP as expected
          then:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{http.request.method} %{url.full} %{http.version}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_fields:
                target: log
                fields:
                  detected_format: "combined"
          else:
            - dissect:
                field: "message"
                tokenizer: "%{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{url.full}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_fields:
                target: log
                fields:
                  detected_format: "combined_incomplete"

    - if:
        regexp:
            message: '^[^:\s]+:\d{1,3}\s\d{1,3}.+ \d+ \d+' # LogFormat vhost_combined
      then:
        - if:
            regexp:
              message: '\sHTTP' # The request section includes the keyword HTTP as expected
          then:
            - dissect:
                field: "message"
                tokenizer: "%{http.server.name}:%{http.server.port} %{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{http.request.method} %{url.full} %{http.version}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_fields:
                target: log
                fields:
                  detected_format: "vhost_combined"
          else:
            - dissect:
                field: "message"
                tokenizer: "%{http.server.name}:%{http.server.port} %{source.ip} %{http.auth_type} %{http.username} [%{temp_timestamp}] \"%{url.full}\" %{http.response.status_code} %{http.response.body.bytes} \"%{http.request.referrer}\" \"%{user_agent.original}\""
                target_prefix: ''
                ignore_missing: true
                ignore_failure: true
                overwrite_keys: true
            - add_fields:
                target: log
                fields:
                  detected_format: "vhost_combined_incomplete"
      
    - timestamp:
        field: temp_timestamp
        layouts:
          - '02/Jan/2006:15:04:05 -0700'
    - drop_fields:
        fields: temp_timestamp

    {{#MORIO_APACHE_SPLUNK_INDEX_NAME }}
    - add_fields:
        target: splunk
        fields:
          index: {{ MORIO_APACHE_SPLUNK_INDEX_NAME }}
    {{/MORIO_APACHE_SPLUNK_INDEX_NAME }}

{{/MORIO_DOCS}}

